<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Profile</title>
  <link rel="stylesheet" href="/styles.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <style>
    .greeting {
      display: flex;
      align-items: center;
      margin: 5px 0px -15px 5px; /* Reduce margin for smaller height */
      padding: 5px; /* No padding to further reduce height */
    }
    .greeting i, .greeting img {
      margin-right: 10px; /* Add space between the icon/image and text */
    }
  </style>

</head>
<body>
  <!-- <h1  id="greeting">Welcome, <b><%= user.name %></b>!</h1> -->
  <div class="greeting">
    &nbsp;&nbsp;<i class="fas fa-user-circle" style="font-size: 30px;"></i> <!-- Font Awesome avatar icon -->
     Good Morning, <b><%= user.name %></b> !
  </div>

  <!-- <p>Age: <%= user.age %> &nbsp;&nbsp;&nbsp;&nbsp; <%= user.profession %></p> -->
  <ul  class="alert-list">
    <% user.alerts.forEach(function(alert){ %>
      <li><%= alert %></li>
    <% }) %>
  </ul>
  <ul>
    <% user.hobbies.forEach(function(hobby){ %>
      <li><%= hobby %></li>
    <% }) %>
  </ul>

  <div class="button-container">
    <button id="monthlyBtn">Month</button>
    <button id="weeklyBtn">Week</button>
    <button id="dailyBtn">Day</button>
</div>
  <!-- 这是一个曲线图的占位符，可以用其他 JavaScript 库或框架生成图表 -->
  <div id="curve-chart">
    <canvas id="myChart" width="400" height="200"></canvas>
  </div>

  <!-- 嵌入 knowledge.html -->
  <h2>&nbsp;&nbsp;Menstrual Flow</h2>
  <iframe src="/knowledge.html" width="100%" height="500px"></iframe>

  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // 使用 Chart.js 绘制曲线图
    var ctx = document.getElementById('myChart').getContext('2d');
    
     // Define monthly data
     var monthlyData = {
        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October'],
        datasets: [
          {
            label: 'Volume(ml)',
            data: [65, 59, 80, 81, 56, 55, 40, 70, 65, 77],
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 2,
            fill: false,
            yAxisID: 'y'
          },
          {
            label: 'Cramping',
            data: [1, 2, 1, 2, 3, 3, 4, 4, 3, 2],
            backgroundColor: 'rgba(255, 99, 132, 0.5)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1,
            type: 'bar',
            yAxisID: 'y1'
          }
        ]
      };

    // Define weekly data
    var weeklyData = {
        labels: ['Week 1', 'Week 2', 'Week 3', 'Week 4'],
        datasets: [
          {
            label: 'Volume(ml)',
            data: [75, 60, 85, 90],
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 2,
            fill: false,
            yAxisID: 'y'
          },
          {
            label: 'Cramping',
            data: [1, 1, 2, 2],
            backgroundColor: 'rgba(255, 99, 132, 0.5)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1,
            type: 'bar',
            yAxisID: 'y1'
          }
        ]
      };

    
      // Define weekly data
    var dailyData = {
        labels: ['Sunday', 'Monday', 'Tuesday', 'Wedsday', 'Tursday', 'Friday','Saturday'],
        datasets: [
          {
            label: 'Volume(ml)',
            data: [75, 60, 85, 90, 75, 60, 85],
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 2,
            fill: false,
            yAxisID: 'y'
          },
          {
            label: 'Cramping',
            data: [1, 1, 2, 0, 1, 0,0],
            backgroundColor: 'rgba(255, 99, 132, 0.5)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1,
            type: 'bar',
            yAxisID: 'y1'
          }
        ]
      };


    
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August','September','October'],
            datasets: [{
                label: 'Volume(ml)',
                data: [65, 59, 80, 81, 56, 55, 40,70,65,77],
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 2,
                fill: false,
                yAxisID: 'y', // Use the left y-axis
            },
          {
            label: 'Cramping', // Cramping data (Bar)
            data: [1, 2, 1, 2, 3, 3, 4, 4, 3, 2],
            backgroundColor: 'rgba(255, 99, 132, 0.5)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1,
            type: 'bar', // Set the type to bar for cramping data
            yAxisID: 'y1', // Use the right y-axis
          }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true,
                    position: 'left', // Left y-axis for Activity
                    title: {
                      display: true,
                      text: 'Activity'
                    }
                  },
                  y1: {
                    beginAtZero: true,
                    position: 'right', // Right y-axis for Cramping
                    max: 40, // Set the maximum to 40
                    ticks: {
                    stepSize: 5, // Set the interval between ticks
                        callback: function(value) {
                            return Number(value).toFixed(0); // Remove decimal points
                        }
                    },
                    grid: {
                      drawOnChartArea: false // Prevent grid lines from overlapping
                    },
                    title: {
                      display: true,
                      text: 'Cramping'
                    }
                  }
                }
            
        }
        
    });

           // Function to update chart data
           function updateChartData(chart, newData) {
            chart.data = newData;
            chart.update();
        }

    // Event listeners for buttons
    document.getElementById('monthlyBtn').addEventListener('click', function() {
        updateChartData(myChart, monthlyData);
      });
  
      document.getElementById('weeklyBtn').addEventListener('click', function() {
        updateChartData(myChart, weeklyData);
      });

      document.getElementById('dailyBtn').addEventListener('click', function() {
        updateChartData(myChart, dailyData);
      });


      function getGreeting() {
        const currentHour = new Date().getHours();
  
        if (currentHour < 12) {
          return 'Good Morning';
        } else if (currentHour < 18) {
          return 'Good Afternoon';
        } else {
          return 'Good Evening';
        }
      }

      // Update the greeting in the HTML
    document.addEventListener('DOMContentLoaded', function() {
        const userName = '<%= user.name %>';
        const greetingMessage = getGreeting();
        const greetingElement = document.getElementById('greeting');
        
        greetingElement.textContent = `${greetingMessage}, ${userName}!`;
      });

  </script>
</body>
</html>
